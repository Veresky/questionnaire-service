<?xml version="1.0" encoding="UTF-8"?>
<!--
  scan：当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
  scanPeriod：设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒当scan为true时，此属性生效。默认的时间间隔为1分钟。
  debug：当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
  <contextName>logback</contextName>

  <!-- 不能使用相对路径-->
  <springProperty scope="context" name="filePath" source="logging.file.path" />
  <springProperty scope="context" name="fileMaxSize" source="logging.file.max-size" />
  <springProperty scope="context" name="fileMaxHistory" source="logging.file.max-history" />

  <!-- 输出到控制台 -->
  <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <!-- 格式化输出：%d:表示日期   %thread:表示线程名  %-5level:级别从左显示5个字符宽度  %msg:日志消息  %n:是换行符 -->
      <pattern>%d{yyyy-MM-dd HH:mm:ss:SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>DEBUG</level>
    </filter>
  </appender>

  <!-- 输出到文件 -->
  <!-- 按照每天生成日志文件 -->
  <appender name="FILE_INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <!-- 日志文件输出的文件名 %i是当天第几份文件 -->
      <FileNamePattern>${filePath}/info/log.info.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
      <MaxFileSize>${fileMaxSize}</MaxFileSize>
      <MaxHistory>${fileMaxHistory}</MaxHistory>
    </rollingPolicy>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <!-- 格式化输出：%d:表示日期   %thread:表示线程名  %-5level:级别从左显示5个字符宽度  %msg:日志消息  %n:是换行符 -->
      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>INFO</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
  </appender>
  <appender name="FILE_WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <!-- 日志文件输出的文件名 %i是当天第几份文件 -->
      <FileNamePattern>${filePath}/warn/log.warn.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
      <MaxFileSize>${fileMaxSize}</MaxFileSize>
      <MaxHistory>${fileMaxHistory}</MaxHistory>
    </rollingPolicy>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <!-- 格式化输出：%d:表示日期   %thread:表示线程名  %-5level:级别从左显示5个字符宽度  %msg:日志消息  %n:是换行符 -->
      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>WARN</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
  </appender>
  <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <!-- 日志文件输出的文件名 %i是当天第几份文件 -->
      <FileNamePattern>${filePath}/error/log.error.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
      <MaxFileSize>${fileMaxSize}</MaxFileSize>
      <MaxHistory>${fileMaxHistory}</MaxHistory>
    </rollingPolicy>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <!-- 格式化输出：%d:表示日期   %thread:表示线程名  %-5level:级别从左显示5个字符宽度  %msg:日志消息  %n:是换行符 -->
      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>ERROR</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
  </appender>
  
  <!-- 日志输出级别 local环境 -->
  <springProfile name="local">
    <root level="INFO">
      <appender-ref ref="CONSOLE" />
      <appender-ref ref="FILE_ERROR" />
      <appender-ref ref="FILE_WARN" />
      <appender-ref ref="FILE_INFO" />
    </root>
    <logger name="com.xiaohudu.questionnaire.mapper" level="DEBUG" additivity="false">
      <appender-ref ref="CONSOLE"/>
    </logger>
  </springProfile>

  <!-- 日志输出级别 prod环境 -->
  <springProfile name="sit | uat | prod">
    <root level="INFO">
      <appender-ref ref="FILE_ERROR" />
      <appender-ref ref="FILE_WARN" />
      <appender-ref ref="FILE_INFO" />
    </root>
  </springProfile>

</configuration>
